# This is a basic workflow to help you get started with Actions

name: Bicep CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.acr_login_server }} # default: index.docker.io
          username: ${{ secrets.acr_service_principal }}
          password: ${{ secrets.acr_sp_password }}

      # Runs a set of commands using the runners shell
      - name: Get Current Image Version & Build New Version
        run: |
          msg="${{ github.event.head_commit.message }}"
          echo $msg
          acr_name='tjsiacdemoacr'
          file="acr.bicep"
          versions=`az acr repository show-tags --name $acr_name --repository bicep/modules/acr -o json | jq '.[]' | tr -d '"'`

          current_latest=`echo $versions | sort -rV | head -1`
          # Read Semver fields
          IFS=. read -r major minor patch <<<"$current_latest"

          if [[ "$msg" =~ ^version.* ]]; then
            major="$((major + 1))"
          elif [[ "$msg" =~ ^feat.* ]]; then
            minor="$((minor + 1))"
          else
            # Increment patch version
            patch="$((patch + 1))"
          fi

          # Re-assemble version string from Semver fields
          printf -v new_version '%d.%d.%d' "$major" "$minor" "$patch"
          echo $new_version

          mod_name=`echo $file | cut -f1 -d'.'`
          target="br:$acr_name.azurecr.io/bicep/modules/$mod_name:$new_version"

          ls

          pwd
          # cd /home/runner/work/l0-global-library/l0-global-library/infrastructure_templates/bicep

          # az bicep publish --file $file --target $target

